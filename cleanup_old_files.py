#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö/—É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
"""
import os
import shutil
from pathlib import Path

# –§–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è)
OLD_FILES = [
    "TelegramBotHandlerUpdate.py",
    "PriceProcessorCR.py",
    "PriceProcessorXtremeCase.py",
    "price_processor_b.py"
]

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ (–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã)
CLEAN_DIRS = [
    "temp",
    "__pycache__"
]


def cleanup_old_files():
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    print("=" * 60)
    
    removed_count = 0
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö Python —Ñ–∞–π–ª–æ–≤
    print("\nüìÑ –£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤:")
    for file_name in OLD_FILES:
        file_path = Path(file_name)
        if file_path.exists():
            try:
                file_path.unlink()
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω: {file_name}")
                removed_count += 1
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {file_name}: {e}")
        else:
            print(f"   ‚è≠Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω: {file_name}")
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print("\nüìÅ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:")
    for dir_name in CLEAN_DIRS:
        dir_path = Path(dir_name)
        if dir_path.exists() and dir_path.is_dir():
            try:
                shutil.rmtree(dir_path)
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–∞: {dir_name}/")
                removed_count += 1
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {dir_name}/: {e}")
        else:
            print(f"   ‚è≠Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–∞: {dir_name}/")
    
    print("\n" + "=" * 60)
    if removed_count > 0:
        print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {removed_count}")
    else:
        print("‚ÑπÔ∏è  –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å, –≤—Å–µ —É–∂–µ —á–∏—Å—Ç–æ!")
    
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã.")
    print("   –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python channel_monitor_bot.py")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞!")
    print("   –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:")
    for f in OLD_FILES:
        print(f"   - {f}")
    for d in CLEAN_DIRS:
        print(f"   - {d}/")
    
    response = input("\n‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ").strip().lower()
    
    if response in ['yes', 'y', '–¥–∞', '–¥']:
        cleanup_old_files()
    else:
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")


if __name__ == "__main__":
    main()

